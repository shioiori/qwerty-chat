{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  id: \"main-chat\",\n  class: \"col-span-5 border-r-2 border-gray-100\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChatContentHeader = _resolveComponent(\"ChatContentHeader\");\n  const _component_ChatContentBody = _resolveComponent(\"ChatContentBody\");\n  const _component_ChatContentMessageBar = _resolveComponent(\"ChatContentMessageBar\");\n  return $data.on_chatted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ChatContentHeader, {\n    chat_info: $data.chat_info\n  }, null, 8 /* PROPS */, [\"chat_info\"]), _createVNode(_component_ChatContentBody, {\n    chat_info: $data.chat_info,\n    list_messages: $data.list_messages\n  }, null, 8 /* PROPS */, [\"chat_info\", \"list_messages\"]), _createVNode(_component_ChatContentMessageBar, {\n    chat_info: $data.chat_info\n  }, null, 8 /* PROPS */, [\"chat_info\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["id","class","$data","on_chatted","_createElementBlock","_hoisted_1","_createVNode","_component_ChatContentHeader","chat_info","_component_ChatContentBody","list_messages","_component_ChatContentMessageBar"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatContent.vue"],"sourcesContent":["<template>\r\n    <div id=\"main-chat\" class=\"col-span-5 border-r-2 border-gray-100\" v-if=\"on_chatted\">\r\n        <ChatContentHeader :chat_info=\"chat_info\"/>\r\n        <ChatContentBody :chat_info=\"chat_info\" :list_messages=\"list_messages\"/>\r\n        <ChatContentMessageBar :chat_info=\"chat_info\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContentHeader from './ChatContentHeader.vue';\r\nimport ChatContentBody from './ChatContentBody.vue';\r\nimport ChatContentMessageBar from './ChatContentMessageBar.vue';\r\n\r\nexport default {\r\n    data(){\r\n        return {\r\n            on_chatted: false,\r\n            chat_info: {},\r\n            list_messages: [],\r\n        }\r\n    },\r\n    components: {\r\n        ChatContentBody,\r\n        ChatContentHeader,\r\n        ChatContentMessageBar,\r\n    },\r\n    mounted(){\r\n        this.emitter.on(\"getCurrentChat\", res => {\r\n            this.on_chatted = res.on_chatted;\r\n            this.chat_info = res;\r\n            this.bindMessage(this.chat_info.chat_id);\r\n        });\r\n        this.emitter.on(\"sendMessage\", message => {\r\n            this.list_messages.push(message);\r\n        });\r\n    },\r\n    methods: {\r\n        async bindMessage(id) {\r\n            this.list_messages = await this.$store.getters.getListMessages(id);\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n#main-chat{\r\n    height: 100vh;\r\n}\r\n</style>"],"mappings":";;;EACSA,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC;;;;;;SAA8CC,KAAA,CAAAC,UAAU,I,cAAlFC,mBAAA,CAIM,OAJNC,UAIM,GAHFC,YAAA,CAA2CC,4BAAA;IAAvBC,SAAS,EAAEN,KAAA,CAAAM;EAAS,wCACxCF,YAAA,CAAwEG,0BAAA;IAAtDD,SAAS,EAAEN,KAAA,CAAAM,SAAS;IAAGE,aAAa,EAAER,KAAA,CAAAQ;2DACxDJ,YAAA,CAA+CK,gCAAA;IAAvBH,SAAS,EAAEN,KAAA,CAAAM;EAAS,uC"},"metadata":{},"sourceType":"module","externalDependencies":[]}