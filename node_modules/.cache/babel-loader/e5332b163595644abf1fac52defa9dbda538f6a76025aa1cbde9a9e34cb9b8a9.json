{"ast":null,"code":"import ChatContentBodyMessage from './ChatContentBodyMessage.vue';\nimport EventBus from '@/event-bus';\nimport constants from '@/constants';\nexport default {\n  data() {\n    return {\n      list_messages: []\n    };\n  },\n  components: {\n    ChatContentBodyMessage\n  },\n  methods: {\n    async getCurrentChat(chat_id) {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters.getAccessToken\n          }\n        };\n        let url = constants.BASE_URL + '/api/chat/get_current_chat?id=' + chat_id;\n        var res = (await axios.get(url, config)).data;\n        this.list_messages = res;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  created() {\n    EventBus.$on(\"getCurrentChat\", this.getCurrentChat);\n  },\n  destroyed() {\n    EventBus.$off(\"getCurrentChat\", this.getCurrentChat);\n  }\n};","map":{"version":3,"names":["ChatContentBodyMessage","EventBus","constants","data","list_messages","components","methods","getCurrentChat","chat_id","config","headers","Authorization","$store","getters","getAccessToken","url","BASE_URL","res","axios","get","err","console","log","created","$on","destroyed","$off"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatContentBody.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <ChatContentBodyMessage v-for=\"(item, index) in list_messages\"\r\n        v-bind:message=\"item\"\r\n        v-bind:key=\"index\"\r\n      />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContentBodyMessage from './ChatContentBodyMessage.vue';\r\nimport EventBus from '@/event-bus';\r\nimport constants from '@/constants';\r\n\r\n\r\nexport default {\r\n    data(){\r\n      return {\r\n        list_messages: [],\r\n      }\r\n    },  \r\n    components: {\r\n        ChatContentBodyMessage,\r\n    },\r\n    methods: {\r\n        async getCurrentChat(chat_id){\r\n          try {\r\n            let config = {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.$store.getters.getAccessToken,\r\n                }\r\n            }\r\n            let url = constants.BASE_URL + '/api/chat/get_current_chat?id=' + chat_id;\r\n            var res = (await axios.get(url, config)).data;\r\n            this.list_messages = res;\r\n          }\r\n          catch (err) {\r\n              console.log(err);    \r\n          }\r\n        }\r\n    },\r\n    created() {\r\n        EventBus.$on(\"getCurrentChat\", this.getCurrentChat);\r\n    },\r\n    destroyed() {\r\n        EventBus.$off(\"getCurrentChat\", this.getCurrentChat);\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAUA,OAAOA,sBAAqB,MAAO,8BAA8B;AACjE,OAAOC,QAAO,MAAO,aAAa;AAClC,OAAOC,SAAQ,MAAO,aAAa;AAGnC,eAAe;EACXC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,cAAcA,CAACC,OAAO,EAAC;MAC3B,IAAI;QACF,IAAIC,MAAK,GAAI;UACTC,OAAO,EAAE;YACLC,aAAa,EAAE,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC;UACnD;QACJ;QACA,IAAIC,GAAE,GAAIb,SAAS,CAACc,QAAO,GAAI,gCAA+B,GAAIR,OAAO;QACzE,IAAIS,GAAE,GAAI,CAAC,MAAMC,KAAK,CAACC,GAAG,CAACJ,GAAG,EAAEN,MAAM,CAAC,EAAEN,IAAI;QAC7C,IAAI,CAACC,aAAY,GAAIa,GAAG;MAC1B,EACA,OAAOG,GAAG,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACF;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACNtB,QAAQ,CAACuB,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACjB,cAAc,CAAC;EACvD,CAAC;EACDkB,SAASA,CAAA,EAAG;IACRxB,QAAQ,CAACyB,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAACnB,cAAc,CAAC;EACxD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}