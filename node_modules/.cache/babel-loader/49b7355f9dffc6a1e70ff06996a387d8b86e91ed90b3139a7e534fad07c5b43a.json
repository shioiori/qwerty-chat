{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/** Error thrown when an HTTP request fails. */\nvar HttpError = /** @class */function (_super) {\n  __extends(HttpError, _super);\n  /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n   *\r\n   * @param {string} errorMessage A descriptive error message.\r\n   * @param {number} statusCode The HTTP status code represented by this error.\r\n   */\n  function HttpError(errorMessage, statusCode) {\n    var _newTarget = this.constructor;\n    var _this = this;\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, errorMessage) || this;\n    _this.statusCode = statusCode;\n    // Workaround issue in Typescript compiler\n    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n    _this.__proto__ = trueProto;\n    return _this;\n  }\n  return HttpError;\n}(Error);\nexport { HttpError };\n/** Error thrown when a timeout elapses. */\nvar TimeoutError = /** @class */function (_super) {\n  __extends(TimeoutError, _super);\n  /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n   *\r\n   * @param {string} errorMessage A descriptive error message.\r\n   */\n  function TimeoutError(errorMessage) {\n    var _newTarget = this.constructor;\n    if (errorMessage === void 0) {\n      errorMessage = \"A timeout occurred.\";\n    }\n    var _this = this;\n    var trueProto = _newTarget.prototype;\n    _this = _super.call(this, errorMessage) || this;\n    // Workaround issue in Typescript compiler\n    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\n    _this.__proto__ = trueProto;\n    return _this;\n  }\n  return TimeoutError;\n}(Error);\nexport { TimeoutError };","map":{"version":3,"names":["HttpError","_super","__extends","errorMessage","statusCode","_this","trueProto","_newTarget","prototype","call","__proto__","Error","TimeoutError"],"sources":["../../src/Errors.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @aspnet/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA,IAAAA,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAQ3B;;;;;EAKA,SAAAD,UAAYG,YAAoB,EAAEC,UAAkB;;IAApD,IAAAC,KAAA;IACI,IAAMC,SAAS,GAAGC,UAAA,CAAWC,SAAS;IACtCH,KAAA,GAAAJ,MAAA,CAAAQ,IAAA,OAAMN,YAAY,CAAC;IACnBE,KAAI,CAACD,UAAU,GAAGA,UAAU;IAE5B;IACA;IACAC,KAAI,CAACK,SAAS,GAAGJ,SAAS;;EAC9B;EACJ,OAAAN,SAAC;AAAD,CAAC,CAtB8BW,KAAK;;AAwBpC;AACA,IAAAC,YAAA,0BAAAX,MAAA;EAAkCC,SAAA,CAAAU,YAAA,EAAAX,MAAA;EAK9B;;;;EAIA,SAAAW,aAAYT,YAA4C;;IAA5C,IAAAA,YAAA;MAAAA,YAAA,wBAA4C;IAAA;IAAxD,IAAAE,KAAA;IACI,IAAMC,SAAS,GAAGC,UAAA,CAAWC,SAAS;IACtCH,KAAA,GAAAJ,MAAA,CAAAQ,IAAA,OAAMN,YAAY,CAAC;IAEnB;IACA;IACAE,KAAI,CAACK,SAAS,GAAGJ,SAAS;;EAC9B;EACJ,OAAAM,YAAC;AAAD,CAAC,CAjBiCD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}