{"ast":null,"code":"import axios from 'axios';\nimport { createStore } from 'vuex';\nimport constants from '../constants/index.js';\nconst store = createStore({\n  state: () => ({\n    user_id: '',\n    access_token: '',\n    user_connection: '',\n    current_connection_user_id: '',\n    current_connection_id: ''\n  }),\n  getters: {\n    getAccessToken: state => state.access_token,\n    getUserId: state => state.user_id,\n    getSearchConnection: state => async name => {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\n        var res = (await axios.get(url, config)).data;\n        console.log(res);\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    getUser: state => async id => {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/user' + (id ? '?id=' + id : '');\n        var res = (await axios.get(url, config)).data;\n        console.log(res);\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    getCurrentChat: state => async id => {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/chat/get-current-chat?id=' + id;\n        var res = (await axios.get(url, config)).data;\n        console.log(res);\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  mutations: {\n    setAccessToken: (state, token) => state.access_token = token,\n    setUserId: (state, userId) => state.user_id = userId,\n    setCurrentConnectionUserId: (state, connection) => state.current_connection_user_id = connection,\n    setCurrentConectionId: (state, connection) => state.current_connection_id = connection,\n    async createCurrentChat(member_ids, chat_name, is_limited) {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/chat/get-current-chat?id=' + id;\n        let body = {\n          member_ids: member_ids,\n          name: chat_name,\n          limit: is_limited\n        };\n        var res = (await axios.post(url, body, config)).data;\n        console.log(res);\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  actions: {}\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","constants","store","state","user_id","access_token","user_connection","current_connection_user_id","current_connection_id","getters","getAccessToken","getUserId","getSearchConnection","name","config","headers","Authorization","url","BASE_URL","res","get","data","console","log","err","getUser","id","getCurrentChat","mutations","setAccessToken","token","setUserId","userId","setCurrentConnectionUserId","connection","setCurrentConectionId","createCurrentChat","member_ids","chat_name","is_limited","body","limit","post","actions"],"sources":["F:/Personal Project/qwerty-chat/src/stores/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { createStore } from 'vuex'\r\nimport constants from '../constants/index.js';\r\n\r\n\r\nconst store = createStore({\r\n    state: () => ({ \r\n        user_id: '',\r\n        access_token: '',\r\n        user_connection: '',\r\n        current_connection_user_id: '',\r\n        current_connection_id: '', \r\n    }),\r\n    getters: {\r\n        getAccessToken: (state) => state.access_token,\r\n        getUserId: (state) => state.user_id,\r\n        getSearchConnection: (state) => async (name) => {\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + state.access_token\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\r\n                var res = (await axios.get(url, config)).data;\r\n                console.log(res)\r\n                return res;\r\n            }\r\n            catch (err) {\r\n                console.log(err);    \r\n            }\r\n        },\r\n        getUser: (state) => async (id) => {\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + state.access_token\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/user' + (id ? '?id=' + id : '');\r\n                var res = (await axios.get(url, config)).data;\r\n                console.log(res)\r\n                return res;\r\n            }\r\n            catch (err) {\r\n                console.log(err);    \r\n            }\r\n        },\r\n        getCurrentChat: (state) => async (id) => {\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + state.access_token\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/chat/get-current-chat?id=' + id;\r\n                var res = (await axios.get(url, config)).data;\r\n                console.log(res)\r\n                return res;\r\n            }\r\n            catch (err) {\r\n                console.log(err);    \r\n            }\r\n        },\r\n    },\r\n    mutations: {\r\n        setAccessToken: (state, token) => state.access_token = token,\r\n        setUserId: (state, userId) => state.user_id = userId,\r\n        setCurrentConnectionUserId: (state, connection) => state.current_connection_user_id = connection,\r\n        setCurrentConectionId: (state, connection) => state.current_connection_id = connection,\r\n        async createCurrentChat(member_ids, chat_name, is_limited) {\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + state.access_token\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/chat/get-current-chat?id=' + id;\r\n                let body = {\r\n                    member_ids: member_ids,\r\n                    name: chat_name,\r\n                    limit: is_limited,\r\n                }\r\n                var res = (await axios.post(url, body, config)).data;\r\n                console.log(res)\r\n                return res;\r\n            }\r\n            catch (err) {\r\n                console.log(err);    \r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        \r\n    }\r\n});\r\n\r\nexport default store;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}