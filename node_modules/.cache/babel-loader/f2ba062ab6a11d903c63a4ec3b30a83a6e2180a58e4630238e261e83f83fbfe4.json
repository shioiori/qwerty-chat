{"ast":null,"code":"import ChatContentBodyMessage from './ChatContentBodyMessage.vue';\nimport constants from '@/constants';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      list_messages: []\n    };\n  },\n  components: {\n    ChatContentBodyMessage\n  },\n  methods: {},\n  mounted() {\n    this.emitter.on(\"getCurrentChat\", async chat_id => {\n      try {\n        console.log(chat_id);\n        console.log(this.$store.getters.getAccessToken);\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters.getAccessToken\n          }\n        };\n        let url = constants.BASE_URL + '/api/chat/get-current_chat?id=' + chat_id;\n        var res = (await axios.get(url, config)).data;\n        this.list_messages = res;\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n};","map":{"version":3,"names":["ChatContentBodyMessage","constants","axios","data","list_messages","components","methods","mounted","emitter","on","chat_id","console","log","$store","getters","getAccessToken","config","headers","Authorization","url","BASE_URL","res","get","err"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatContentBody.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <ChatContentBodyMessage v-for=\"(item, index) in list_messages\"\r\n        v-bind:message=\"item\"\r\n        v-bind:key=\"index\"\r\n      />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContentBodyMessage from './ChatContentBodyMessage.vue';\r\nimport constants from '@/constants';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data(){\r\n      return {\r\n        list_messages: [],\r\n      }\r\n    },  \r\n    components: {\r\n        ChatContentBodyMessage,\r\n    },\r\n    methods: {\r\n    },\r\n    mounted() { \r\n      this.emitter.on(\"getCurrentChat\", async chat_id => {\r\n        try {\r\n          console.log(chat_id);\r\n          console.log(this.$store.getters.getAccessToken);\r\n            let config = {\r\n                headers: {\r\n                    Authorization: \"Bearer \" + this.$store.getters.getAccessToken,\r\n                }\r\n            }\r\n            let url = constants.BASE_URL + '/api/chat/get-current_chat?id=' + chat_id;\r\n            var res = (await axios.get(url, config)).data;\r\n            this.list_messages = res;\r\n          }\r\n          catch (err) {\r\n              console.log(err);    \r\n          }\r\n      });\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAUA,OAAOA,sBAAqB,MAAO,8BAA8B;AACjE,OAAOC,SAAQ,MAAO,aAAa;AACnC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE,CACT,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAACC,EAAE,CAAC,gBAAgB,EAAE,MAAMC,OAAM,IAAK;MACjD,IAAI;QACFC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;QACpBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC,cAAc,CAAC;QAC7C,IAAIC,MAAK,GAAI;UACTC,OAAO,EAAE;YACLC,aAAa,EAAE,SAAQ,GAAI,IAAI,CAACL,MAAM,CAACC,OAAO,CAACC;UACnD;QACJ;QACA,IAAII,GAAE,GAAIlB,SAAS,CAACmB,QAAO,GAAI,gCAA+B,GAAIV,OAAO;QACzE,IAAIW,GAAE,GAAI,CAAC,MAAMnB,KAAK,CAACoB,GAAG,CAACH,GAAG,EAAEH,MAAM,CAAC,EAAEb,IAAI;QAC7C,IAAI,CAACC,aAAY,GAAIiB,GAAG;MAC1B,EACA,OAAOE,GAAG,EAAE;QACRZ,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;MACpB;IACJ,CAAC,CAAC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}