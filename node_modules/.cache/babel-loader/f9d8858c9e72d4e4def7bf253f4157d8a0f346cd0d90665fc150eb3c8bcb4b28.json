{"ast":null,"code":"// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\n/** A logger that does nothing when log messages are sent to it. */\nvar NullLogger = /** @class */function () {\n  function NullLogger() {}\n  /** @inheritDoc */\n  // tslint:disable-next-line\n  NullLogger.prototype.log = function (_logLevel, _message) {};\n  /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\n  NullLogger.instance = new NullLogger();\n  return NullLogger;\n}();\nexport { NullLogger };","map":{"version":3,"names":["NullLogger","prototype","log","_logLevel","_message","instance"],"sources":["../../src/Loggers.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @aspnet/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAIA;AACA,IAAAA,UAAA;EAII,SAAAA,WAAA,GAAuB;EAEvB;EACA;EACOA,UAAA,CAAAC,SAAA,CAAAC,GAAG,GAAV,UAAWC,SAAmB,EAAEC,QAAgB,GAChD,CAAC;EARD;EACcJ,UAAA,CAAAK,QAAQ,GAAY,IAAIL,UAAU,EAAE;EAQtD,OAAAA,UAAC;CAAA,CAVD;SAAaA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}