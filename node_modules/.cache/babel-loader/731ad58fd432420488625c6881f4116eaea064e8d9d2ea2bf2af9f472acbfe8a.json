{"ast":null,"code":"import axios from 'axios';\nimport { createStore } from 'vuex';\nimport constants from '../constants/index.js';\nconst store = createStore({\n  state: () => ({\n    user_id: '',\n    access_token: '',\n    connection: ''\n  }),\n  getters: {\n    getAccessToken: state => state.access_token,\n    getUserId: state => state.user_id\n  },\n  mutations: {\n    setAccessToken: (state, token) => state.access_token = token,\n    setUserId: (state, userId) => state.user_id = userId,\n    getSearchConnection: async (state, name) => {\n      state.connection = name;\n    }\n  },\n  actions: {\n    async get_search({\n      commit\n    }, search_value) {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\n        var res = (await axios.get(url, config)).data;\n        commit('getSearchConnection', ress);\n        console.log(res);\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","constants","store","state","user_id","access_token","connection","getters","getAccessToken","getUserId","mutations","setAccessToken","token","setUserId","userId","getSearchConnection","name","actions","get_search","commit","search_value","config","headers","Authorization","url","BASE_URL","res","get","data","ress","console","log","err"],"sources":["F:/Personal Project/qwerty-chat/src/stores/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { createStore } from 'vuex'\r\nimport constants from '../constants/index.js';\r\n\r\n\r\nconst store = createStore({\r\n    state: () => ({ \r\n        user_id: '',\r\n        access_token: '',\r\n        connection: '',\r\n    }),\r\n    getters: {\r\n        getAccessToken: (state) => state.access_token,\r\n        getUserId: (state) => state.user_id\r\n    },\r\n    mutations: {\r\n        setAccessToken: (state, token) => state.access_token = token,\r\n        setUserId: (state, userId) => state.user_id = userId,\r\n        getSearchConnection: async (state, name) => {\r\n            state.connection = name\r\n                }\r\n    },\r\n    actions: {\r\n        async get_search({commit}, search_value) {\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                       Authorization: \"Bearer \" + state.access_token\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\r\n                var res = (await axios.get(url, config)).data;\r\n                commit('getSearchConnection', ress)\r\n                console.log(res);\r\n                return res;\r\n            }\r\n            catch (err) {\r\n                console.log(err);    \r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default store;\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAG7C,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAEA,CAAA,MAAO;IACVC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE;EAChB,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,cAAc,EAAGL,KAAK,IAAKA,KAAK,CAACE,YAAY;IAC7CI,SAAS,EAAGN,KAAK,IAAKA,KAAK,CAACC;EAChC,CAAC;EACDM,SAAS,EAAE;IACPC,cAAc,EAAEA,CAACR,KAAK,EAAES,KAAK,KAAKT,KAAK,CAACE,YAAY,GAAGO,KAAK;IAC5DC,SAAS,EAAEA,CAACV,KAAK,EAAEW,MAAM,KAAKX,KAAK,CAACC,OAAO,GAAGU,MAAM;IACpDC,mBAAmB,EAAE,MAAAA,CAAOZ,KAAK,EAAEa,IAAI,KAAK;MACxCb,KAAK,CAACG,UAAU,GAAGU,IAAI;IACnB;EACZ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,UAAUA,CAAC;MAACC;IAAM,CAAC,EAAEC,YAAY,EAAE;MACrC,IAAI;QACA,IAAIC,MAAM,GAAG;UACTC,OAAO,EAAE;YACNC,aAAa,EAAE,SAAS,GAAGpB,KAAK,CAACE;UACpC;QACJ,CAAC;QACD,IAAImB,GAAG,GAAGvB,SAAS,CAACwB,QAAQ,GAAG,gCAAgC,GAAGT,IAAI;QACtE,IAAIU,GAAG,GAAG,CAAC,MAAM3B,KAAK,CAAC4B,GAAG,CAACH,GAAG,EAAEH,MAAM,CAAC,EAAEO,IAAI;QAC7CT,MAAM,CAAC,qBAAqB,EAAEU,IAAI,CAAC;QACnCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;QAChB,OAAOA,GAAG;MACd,CAAC,CACD,OAAOM,GAAG,EAAE;QACRF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MACpB;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAe9B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}