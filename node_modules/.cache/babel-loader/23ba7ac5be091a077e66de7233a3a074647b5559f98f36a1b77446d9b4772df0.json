{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Copyright (c) .NET Foundation. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { LogLevel } from \"./ILogger\";\nimport { TransferFormat } from \"./ITransport\";\nimport { Arg, getDataDetail } from \"./Utils\";\n/** @private */\nvar WebSocketTransport = /** @class */function () {\n  function WebSocketTransport(accessTokenFactory, logger, logMessageContent) {\n    this.logger = logger;\n    this.accessTokenFactory = accessTokenFactory || function () {\n      return null;\n    };\n    this.logMessageContent = logMessageContent;\n  }\n  WebSocketTransport.prototype.connect = function (url, transferFormat) {\n    return __awaiter(this, void 0, void 0, function () {\n      var token;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            Arg.isRequired(url, \"url\");\n            Arg.isRequired(transferFormat, \"transferFormat\");\n            Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\n            if (typeof WebSocket === \"undefined\") {\n              throw new Error(\"'WebSocket' is not supported in your environment.\");\n            }\n            this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting\");\n            return [4 /*yield*/, this.accessTokenFactory()];\n          case 1:\n            token = _a.sent();\n            if (token) {\n              url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + (\"access_token=\" + encodeURIComponent(token));\n            }\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              url = url.replace(/^http/, \"ws\");\n              var webSocket = new WebSocket(url);\n              if (transferFormat === TransferFormat.Binary) {\n                webSocket.binaryType = \"arraybuffer\";\n              }\n              // tslint:disable-next-line:variable-name\n              webSocket.onopen = function (_event) {\n                _this.logger.log(LogLevel.Information, \"WebSocket connected to \" + url);\n                _this.webSocket = webSocket;\n                resolve();\n              };\n              webSocket.onerror = function (event) {\n                reject(event.error);\n              };\n              webSocket.onmessage = function (message) {\n                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) data received. \" + getDataDetail(message.data, _this.logMessageContent) + \".\");\n                if (_this.onreceive) {\n                  _this.onreceive(message.data);\n                }\n              };\n              webSocket.onclose = function (event) {\n                // webSocket will be null if the transport did not start successfully\n                _this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\n                if (_this.onclose) {\n                  if (event.wasClean === false || event.code !== 1000) {\n                    _this.onclose(new Error(\"Websocket closed with status code: \" + event.code + \" (\" + event.reason + \")\"));\n                  } else {\n                    _this.onclose();\n                  }\n                }\n              };\n            })];\n        }\n      });\n    });\n  };\n  WebSocketTransport.prototype.send = function (data) {\n    if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\n      this.logger.log(LogLevel.Trace, \"(WebSockets transport) sending data. \" + getDataDetail(data, this.logMessageContent) + \".\");\n      this.webSocket.send(data);\n      return Promise.resolve();\n    }\n    return Promise.reject(\"WebSocket is not in the OPEN state\");\n  };\n  WebSocketTransport.prototype.stop = function () {\n    if (this.webSocket) {\n      this.webSocket.close();\n      this.webSocket = null;\n    }\n    return Promise.resolve();\n  };\n  return WebSocketTransport;\n}();\nexport { WebSocketTransport };","map":{"version":3,"names":["LogLevel","TransferFormat","Arg","getDataDetail","WebSocketTransport","accessTokenFactory","logger","logMessageContent","prototype","connect","url","transferFormat","isRequired","isIn","WebSocket","Error","log","Trace","token","_a","sent","indexOf","encodeURIComponent","Promise","resolve","reject","replace","webSocket","Binary","binaryType","onopen","_event","_this","Information","onerror","event","error","onmessage","message","data","onreceive","onclose","wasClean","code","reason","send","readyState","OPEN","stop","close"],"sources":["../../src/WebSocketTransport.ts"],"sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: () => string | Promise<string>;\r\n    private readonly logMessageContent: boolean;\r\n    private webSocket: WebSocket;\r\n\r\n    constructor(accessTokenFactory: () => string | Promise<string>, logger: ILogger, logMessageContent: boolean) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory || (() => null);\r\n        this.logMessageContent = logMessageContent;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        if (typeof (WebSocket) === \"undefined\") {\r\n            throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting\");\r\n\r\n        const token = await this.accessTokenFactory();\r\n        if (token) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            const webSocket = new WebSocket(url);\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}`);\r\n                this.webSocket = webSocket;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: ErrorEvent) => {\r\n                reject(event.error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    this.onreceive(message.data);\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // webSocket will be null if the transport did not start successfully\r\n                this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n                if (this.onclose) {\r\n                    if (event.wasClean === false || event.code !== 1000) {\r\n                        this.onclose(new Error(`Websocket closed with status code: ${event.code} (${event.reason})`));\r\n                    } else {\r\n                        this.onclose();\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === WebSocket.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            this.webSocket.close();\r\n            this.webSocket = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public onreceive: (data: string | ArrayBuffer) => void;\r\n    public onclose: (error?: Error) => void;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}