{"ast":null,"code":"import axios from 'axios';\nimport { createStore } from 'vuex';\nimport constants from '../constants/index.js';\nconst store = createStore({\n  state: () => ({\n    user_id: '',\n    access_token: ''\n  }),\n  getters: {\n    getAccessToken: state => state.access_token,\n    getUserId: state => state.user_id,\n    getSearchConnection: state => async name => {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + state.access_token\n          }\n        };\n        let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\n        var res = (await axios.get(url, config)).data;\n        return res;\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  },\n  mutations: {\n    setAccessToken: (state, token) => state.access_token = token,\n    setUserId: (state, userId) => state.user_id = userId\n  },\n  actions: {}\n});\nexport default store;","map":{"version":3,"names":["axios","createStore","constants","store","state","user_id","access_token","getters","getAccessToken","getUserId","getSearchConnection","name","config","headers","Authorization","url","BASE_URL","res","get","data","err","console","log","mutations","setAccessToken","token","setUserId","userId","actions"],"sources":["F:/Personal Project/qwerty-chat/src/stores/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { createStore } from 'vuex'\r\nimport constants from '../constants/index.js';\r\n\r\n\r\nconst store = createStore({\r\n    state: () => ({ \r\n        user_id: '',\r\n        access_token: '',\r\n    }),\r\n    getters: {\r\n        getAccessToken: (state) => state.access_token,\r\n        getUserId: (state) => state.user_id,\r\n        getSearchConnection: (state) => async (name) => {\r\n                    try {\r\n                        let config = {\r\n                            headers: {\r\n                            Authorization: \"Bearer \" + state.access_token\r\n                            }\r\n                        }\r\n                        let url = constants.BASE_URL + '/api/user/search?search_value=' + name;\r\n                        var res = (await axios.get(url, config)).data;\r\n                        return res;\r\n                    }\r\n                    catch (err) {\r\n                        console.log(err);    \r\n                    }\r\n                }\r\n            },\r\n    mutations: {\r\n        setAccessToken: (state, token) => state.access_token = token,\r\n        setUserId: (state, userId) => state.user_id = userId,\r\n        \r\n    },\r\n    actions: {\r\n    }\r\n});\r\n\r\nexport default store;\r\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,SAAS,MAAM,uBAAuB;AAG7C,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAEA,CAAA,MAAO;IACVC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAClB,CAAC,CAAC;EACFC,OAAO,EAAE;IACLC,cAAc,EAAGJ,KAAK,IAAKA,KAAK,CAACE,YAAY;IAC7CG,SAAS,EAAGL,KAAK,IAAKA,KAAK,CAACC,OAAO;IACnCK,mBAAmB,EAAGN,KAAK,IAAK,MAAOO,IAAI,IAAK;MACpC,IAAI;QACA,IAAIC,MAAM,GAAG;UACTC,OAAO,EAAE;YACTC,aAAa,EAAE,SAAS,GAAGV,KAAK,CAACE;UACjC;QACJ,CAAC;QACD,IAAIS,GAAG,GAAGb,SAAS,CAACc,QAAQ,GAAG,gCAAgC,GAAGL,IAAI;QACtE,IAAIM,GAAG,GAAG,CAAC,MAAMjB,KAAK,CAACkB,GAAG,CAACH,GAAG,EAAEH,MAAM,CAAC,EAAEO,IAAI;QAC7C,OAAOF,GAAG;MACd,CAAC,CACD,OAAOG,GAAG,EAAE;QACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ;EACJ,CAAC;EACTG,SAAS,EAAE;IACPC,cAAc,EAAEA,CAACpB,KAAK,EAAEqB,KAAK,KAAKrB,KAAK,CAACE,YAAY,GAAGmB,KAAK;IAC5DC,SAAS,EAAEA,CAACtB,KAAK,EAAEuB,MAAM,KAAKvB,KAAK,CAACC,OAAO,GAAGsB;EAElD,CAAC;EACDC,OAAO,EAAE,CACT;AACJ,CAAC,CAAC;AAEF,eAAezB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}