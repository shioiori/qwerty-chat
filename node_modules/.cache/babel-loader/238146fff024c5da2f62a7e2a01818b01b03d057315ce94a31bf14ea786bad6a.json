{"ast":null,"code":"import { HubConnectionBuilder, LogLevel } from '@aspnet/signalr';\nimport constants from '@/constants';\nconst connection = new HubConnectionBuilder().withUrl(constants.BASE_URL + '/chat-hub').configureLogging(LogLevel.Information).build();\nasync function onConnectionAsync() {\n  try {\n    await connection.start();\n    console.log(\"SignalR Connected.\");\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction onDisconnectionAsync() {}\nfunction onConnectedNetwork(user_id) {\n  connection.invoke(\"OnConnectedNetwork\", user_id).catch(function (err) {\n    return console.error(err.toString());\n  });\n  return connection.on(\"OnConnected\", connection_id => {\n    return connection_id;\n  });\n}\nasync function SendMessage(message) {\n  console.log(message);\n  connection.invoke(\"SendGroup\", message).catch(function (err) {\n    return console.error(err.toString());\n  }).done();\n}\nexport default {\n  onConnectionAsync,\n  onDisconnectionAsync,\n  onConnectedNetwork,\n  SendMessage,\n  connection\n};","map":{"version":3,"names":["HubConnectionBuilder","LogLevel","constants","connection","withUrl","BASE_URL","configureLogging","Information","build","onConnectionAsync","start","console","log","err","onDisconnectionAsync","onConnectedNetwork","user_id","invoke","catch","error","toString","on","connection_id","SendMessage","message","done"],"sources":["F:/Personal Project/qwerty-chat/src/hubs/chathub.js"],"sourcesContent":["import { HubConnectionBuilder, LogLevel } from '@aspnet/signalr'\r\nimport constants from '@/constants';\r\n\r\nconst connection = new HubConnectionBuilder()\r\n                        .withUrl(constants.BASE_URL + '/chat-hub')\r\n                        .configureLogging(LogLevel.Information)\r\n                        .build();\r\n\r\nasync function onConnectionAsync() {\r\n    try {\r\n        await connection.start();\r\n        console.log(\"SignalR Connected.\");\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction onDisconnectionAsync(){\r\n\r\n}\r\n\r\nfunction onConnectedNetwork(user_id){\r\n    connection.invoke(\"OnConnectedNetwork\", user_id).catch(function (err) {\r\n        return console.error(err.toString());\r\n    });\r\n    return connection.on(\"OnConnected\", (connection_id) => {\r\n        return connection_id;\r\n    });\r\n}\r\n\r\nasync function SendMessage(message){\r\n    console.log(message);\r\n    connection.invoke(\"SendGroup\", message).catch(function (err) {\r\n        return console.error(err.toString());\r\n    }).done(\r\n        \r\n    );\r\n}\r\n\r\nexport default {\r\n    onConnectionAsync,\r\n    onDisconnectionAsync,\r\n    onConnectedNetwork,\r\n    SendMessage,\r\n    connection,\r\n}"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,QAAQ,QAAQ,iBAAiB;AAChE,OAAOC,SAAS,MAAM,aAAa;AAEnC,MAAMC,UAAU,GAAG,IAAIH,oBAAoB,CAAC,CAAC,CACpBI,OAAO,CAACF,SAAS,CAACG,QAAQ,GAAG,WAAW,CAAC,CACzCC,gBAAgB,CAACL,QAAQ,CAACM,WAAW,CAAC,CACtCC,KAAK,CAAC,CAAC;AAEhC,eAAeC,iBAAiBA,CAAA,EAAG;EAC/B,IAAI;IACA,MAAMN,UAAU,CAACO,KAAK,CAAC,CAAC;IACxBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EACpB;AACJ;AAEA,SAASC,oBAAoBA,CAAA,EAAE,CAE/B;AAEA,SAASC,kBAAkBA,CAACC,OAAO,EAAC;EAChCb,UAAU,CAACc,MAAM,CAAC,oBAAoB,EAAED,OAAO,CAAC,CAACE,KAAK,CAAC,UAAUL,GAAG,EAAE;IAClE,OAAOF,OAAO,CAACQ,KAAK,CAACN,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC;EACF,OAAOjB,UAAU,CAACkB,EAAE,CAAC,aAAa,EAAGC,aAAa,IAAK;IACnD,OAAOA,aAAa;EACxB,CAAC,CAAC;AACN;AAEA,eAAeC,WAAWA,CAACC,OAAO,EAAC;EAC/Bb,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC;EACpBrB,UAAU,CAACc,MAAM,CAAC,WAAW,EAAEO,OAAO,CAAC,CAACN,KAAK,CAAC,UAAUL,GAAG,EAAE;IACzD,OAAOF,OAAO,CAACQ,KAAK,CAACN,GAAG,CAACO,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC,CAACK,IAAI,CAEP,CAAC;AACL;AAEA,eAAe;EACXhB,iBAAiB;EACjBK,oBAAoB;EACpBC,kBAAkB;EAClBQ,WAAW;EACXpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}