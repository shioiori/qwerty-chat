{"ast":null,"code":"import { HubConnectionBuilder, LogLevel } from '@aspnet/signalr';\nfunction onConnectionAsync() {\n  const connection = new HubConnectionBuilder().withUrl('http://localhost:8000/chat-hub').configureLogging(LogLevel.Information).build();\n  connection.start();\n}\nfunction onDisconnectionAsync() {}\nfunction ReceiveMessage() {\n  connection.on(\"ReceiveMessage\", function (user, message) {\n    var li = document.createElement(\"li\");\n    document.getElementById(\"messagesList\").appendChild(li);\n    // We can assign user-supplied strings to an element's textContent because it\n    // is not interpreted as markup. If you're assigning in any other way, you \n    // should be aware of possible script injection concerns.\n    li.textContent = `${user} says ${message}`;\n  });\n}\nexport default {\n  onConnectionAsync\n};","map":{"version":3,"names":["HubConnectionBuilder","LogLevel","onConnectionAsync","connection","withUrl","configureLogging","Information","build","start","onDisconnectionAsync","ReceiveMessage","on","user","message","li","document","createElement","getElementById","appendChild","textContent"],"sources":["F:/Personal Project/qwerty-chat/src/hubs/chathub.js"],"sourcesContent":["import { HubConnectionBuilder, LogLevel } from '@aspnet/signalr'\r\n\r\nfunction onConnectionAsync() {\r\n    const connection = new HubConnectionBuilder()\r\n                        .withUrl('http://localhost:8000/chat-hub')\r\n                        .configureLogging(LogLevel.Information)\r\n                        .build();\r\n    connection.start();\r\n}\r\n\r\nfunction onDisconnectionAsync(){\r\n\r\n}\r\n\r\nfunction ReceiveMessage(){\r\n    connection.on(\"ReceiveMessage\", function (user, message) {\r\n        var li = document.createElement(\"li\");\r\n        document.getElementById(\"messagesList\").appendChild(li);\r\n        // We can assign user-supplied strings to an element's textContent because it\r\n        // is not interpreted as markup. If you're assigning in any other way, you \r\n        // should be aware of possible script injection concerns.\r\n        li.textContent = `${user} says ${message}`;\r\n    });\r\n}\r\n\r\nexport default {\r\n    onConnectionAsync\r\n}"],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,QAAQ,QAAQ,iBAAiB;AAEhE,SAASC,iBAAiBA,CAAA,EAAG;EACzB,MAAMC,UAAU,GAAG,IAAIH,oBAAoB,CAAC,CAAC,CACxBI,OAAO,CAAC,gCAAgC,CAAC,CACzCC,gBAAgB,CAACJ,QAAQ,CAACK,WAAW,CAAC,CACtCC,KAAK,CAAC,CAAC;EAC5BJ,UAAU,CAACK,KAAK,CAAC,CAAC;AACtB;AAEA,SAASC,oBAAoBA,CAAA,EAAE,CAE/B;AAEA,SAASC,cAAcA,CAAA,EAAE;EACrBP,UAAU,CAACQ,EAAE,CAAC,gBAAgB,EAAE,UAAUC,IAAI,EAAEC,OAAO,EAAE;IACrD,IAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;IACrCD,QAAQ,CAACE,cAAc,CAAC,cAAc,CAAC,CAACC,WAAW,CAACJ,EAAE,CAAC;IACvD;IACA;IACA;IACAA,EAAE,CAACK,WAAW,GAAI,GAAEP,IAAK,SAAQC,OAAQ,EAAC;EAC9C,CAAC,CAAC;AACN;AAEA,eAAe;EACXX;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}