{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"one-user flex my-4\"\n};\nconst _hoisted_2 = {\n  class: \"avatar online\"\n};\nconst _hoisted_3 = {\n  class: \"w-12 rounded\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"mx-3\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"badge badge-accent\"\n}, \"Active\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $props.user.avatar\n  }, null, 8 /* PROPS */, _hoisted_4)])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, _toDisplayString(this.username), 1 /* TEXT */), _hoisted_6])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","src","$props","user","avatar","_hoisted_5","_toDisplayString","username","_hoisted_6"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatListContactItem.vue"],"sourcesContent":["<template>\r\n    <div class=\"one-user flex my-4\">\r\n        <div class=\"avatar online\">\r\n            <div class=\"w-12 rounded\">\r\n                <img :src=\"user.avatar\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"mx-3\">\r\n            <p>{{ this.username }}</p>\r\n            <span class=\"badge badge-accent\">Active</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        user: Object,\r\n    },\r\n    data(){\r\n        return {\r\n            id: '',\r\n            username: '',\r\n            avatar: '',\r\n        }\r\n    },\r\n    beforeMount(){\r\n        this.bindData();\r\n    },\r\n    methods: {\r\n        async bindData(){\r\n            if (this.user.email != undefined){\r\n                let me = this.$store.getters.getUserId;\r\n                let you = this.user.id;\r\n                var chat = await this.$store.getters.createCurrentChat({\r\n                    me,\r\n                    you,\r\n                });\r\n                this.id = chat.id;\r\n                this.username = this.user.username;\r\n                this.emitter.emit(\"setChatName\", this.username);\r\n            }\r\n            this.id = this.$store.getters.getUserId;\r\n            this.username = this.user.name ? this.user.name : (this.user.members[0].id == this.id ? this.user.members[1].name : this.user.members[0].name);\r\n            this.emitter.emit(\"setChatName\", this.username);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAoB;;EACtBA,KAAK,EAAC;AAAe;;EACjBA,KAAK,EAAC;AAAc;;;EAIxBA,KAAK,EAAC;AAAM;gCAEbC,mBAAA,CAA8C;EAAxCD,KAAK,EAAC;AAAoB,GAAC,QAAM;;;uBAR/CE,mBAAA,CAUM,OAVNC,UAUM,GATFF,mBAAA,CAIM,OAJNG,UAIM,GAHFH,mBAAA,CAEM,OAFNI,UAEM,GADFJ,mBAAA,CAA0B;IAApBK,GAAG,EAAEC,MAAA,CAAAC,IAAI,CAACC;2CAGxBR,mBAAA,CAGM,OAHNS,UAGM,GAFFT,mBAAA,CAA0B,WAAAU,gBAAA,MAAfC,QAAQ,kBACnBC,UAA8C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}