{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message m-4\"\n};\nconst _hoisted_2 = {\n  class: \"container flex\"\n};\nconst _hoisted_3 = {\n  class: \"chat-image avatar\"\n};\nconst _hoisted_4 = {\n  class: \"w-12 rounded-full\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"toast relative toast-start py-0\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChatContentBodyMessageItem = _resolveComponent(\"ChatContentBodyMessageItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: this.user.avatar\n  }, null, 8 /* PROPS */, _hoisted_5)])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_ChatContentBodyMessageItem, {\n    message: this.message\n  }, null, 8 /* PROPS */, [\"message\"])])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","src","user","avatar","_hoisted_6","_createVNode","_component_ChatContentBodyMessageItem","message"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatContentBodyMessage.vue"],"sourcesContent":["<template>\r\n    <div class=\"message m-4\">\r\n        <div class=\"container flex\">\r\n            <div class=\"chat-image avatar\">\r\n                <div class=\"w-12 rounded-full\">\r\n                    <img :src=\"this.user.avatar\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"toast relative toast-start py-0\">\r\n                <ChatContentBodyMessageItem :message=\"this.message\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatContentBodyMessageItem from './ChatContentBodyMessageItem.vue';\r\nexport default {\r\n    data() {\r\n        return {\r\n            user: {},\r\n        }\r\n    },\r\n    props: {\r\n        message: Object\r\n    },\r\n    components: {\r\n        ChatContentBodyMessageItem,\r\n    },\r\n    beforeMount(){\r\n        this.getUser();\r\n    },\r\n    methods: {\r\n        async getUser(){\r\n            var id = this.me\r\n            this.user = this.$store.getters.getUser(this.message.id);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAa;;EACfA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAmB;;EACrBA,KAAK,EAAC;AAAmB;;;EAI7BA,KAAK,EAAC;AAAiC;;;uBAPpDC,mBAAA,CAWM,OAXNC,UAWM,GAVFC,mBAAA,CASM,OATNC,UASM,GARFD,mBAAA,CAIM,OAJNE,UAIM,GAHFF,mBAAA,CAEM,OAFNG,UAEM,GADFH,mBAAA,CAA+B;IAAzBI,GAAG,OAAOC,IAAI,CAACC;2CAG7BN,mBAAA,CAEM,OAFNO,UAEM,GADFC,YAAA,CAAqDC,qCAAA;IAAxBC,OAAO,OAAOA"},"metadata":{},"sourceType":"module","externalDependencies":[]}