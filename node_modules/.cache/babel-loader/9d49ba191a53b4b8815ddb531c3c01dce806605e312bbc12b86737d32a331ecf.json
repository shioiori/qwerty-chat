{"ast":null,"code":"import ChatListContactGroupButton from './ChatListContactGroupButton.vue';\nimport ChatListContactItem from './ChatListContactItem.vue';\nimport ChatListContactSearch from './ChatListContactSearch.vue';\nimport constants from '../constants/index.js';\nimport axios from 'axios';\nexport default {\n  components: {\n    ChatListContactGroupButton,\n    ChatListContactItem,\n    ChatListContactSearch\n  },\n  data() {\n    return {\n      connection: []\n    };\n  },\n  beforeMount() {\n    this.getCurrentConnection();\n  },\n  methods: {\n    async searchConnection(search_value) {\n      console.log(search_value);\n      this.connection = await this.$store.getters.getSearchConnection(search_value);\n    },\n    async getCurrentConnection() {\n      try {\n        let config = {\n          headers: {\n            Authorization: \"Bearer \" + this.$store.getters.getAccessToken\n          }\n        };\n        let url = constants.BASE_URL + '/api/chat/get-current-connection';\n        var res = (await axios.get(url, config)).data;\n        this.connection = res;\n      } catch (e) {\n        console.log(e.message);\n      }\n    },\n    getCurrentChat(chat_id) {\n      var x = this.$store.getters.getCurrentChat(chat_id);\n      if (!x) this.emitter.emit(\"getCurrentChat\", chat_id);\n    }\n  }\n};","map":{"version":3,"names":["ChatListContactGroupButton","ChatListContactItem","ChatListContactSearch","constants","axios","components","data","connection","beforeMount","getCurrentConnection","methods","searchConnection","search_value","console","log","$store","getters","getSearchConnection","config","headers","Authorization","getAccessToken","url","BASE_URL","res","get","e","message","getCurrentChat","chat_id","x","emitter","emit"],"sources":["F:\\Personal Project\\qwerty-chat\\src\\components\\ChatListContact.vue"],"sourcesContent":["<template>\r\n    <div id=\"list-contact\" class=\"col-span-3 border-2 border-gray-100\">\r\n        <div class=\"user-contact-info border-b-2 border-gray-100 flex items-center p-4\">\r\n            <p class=\"text-xl flex-auto font-bold\">Chat</p>\r\n            <ChatListContactGroupButton/>\r\n        </div>\r\n        <div class=\"lst-contact my-4 px-4\">\r\n            <ChatListContactSearch\r\n                @search-connection=\"searchConnection\"/>\r\n            <ChatListContactItem \r\n                v-for=\"(item, index) in connection\"\r\n                v-bind:user=\"item\"\r\n                v-bind:key=\"index\"\r\n                @click=\"getCurrentChat(item.id)\" \r\n            />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatListContactGroupButton from './ChatListContactGroupButton.vue';\r\nimport ChatListContactItem from './ChatListContactItem.vue';\r\nimport ChatListContactSearch from './ChatListContactSearch.vue';\r\n\r\nimport constants from '../constants/index.js';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    components: {\r\n        ChatListContactGroupButton,\r\n        ChatListContactItem,\r\n        ChatListContactSearch,\r\n    },\r\n    data(){\r\n        return {\r\n            connection: [],\r\n        }\r\n    },\r\n    beforeMount(){\r\n        this.getCurrentConnection();\r\n    },\r\n    methods: {\r\n        async searchConnection(search_value){\r\n            console.log(search_value)\r\n            this.connection = await this.$store.getters.getSearchConnection(search_value)\r\n        },\r\n        async getCurrentConnection(){\r\n            try {\r\n                let config = {\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + this.$store.getters.getAccessToken\r\n                    }\r\n                }\r\n                let url = constants.BASE_URL + '/api/chat/get-current-connection';\r\n                var res = (await axios.get(url, config)).data;\r\n                this.connection = res;\r\n            }\r\n            catch (e) {\r\n                console.log(e.message)\r\n            }\r\n        },\r\n        getCurrentChat(chat_id){\r\n            var x = this.$store.getters.getCurrentChat(chat_id);\r\n            if (!x)\r\n            this.emitter.emit(\"getCurrentChat\", chat_id);\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAoBA,OAAOA,0BAAyB,MAAO,kCAAkC;AACzE,OAAOC,mBAAkB,MAAO,2BAA2B;AAC3D,OAAOC,qBAAoB,MAAO,6BAA6B;AAE/D,OAAOC,SAAQ,MAAO,uBAAuB;AAC7C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,UAAU,EAAE;IACRL,0BAA0B;IAC1BC,mBAAmB;IACnBC;EACJ,CAAC;EACDI,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,WAAWA,CAAA,EAAE;IACT,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,gBAAgBA,CAACC,YAAY,EAAC;MAChCC,OAAO,CAACC,GAAG,CAACF,YAAY;MACxB,IAAI,CAACL,UAAS,GAAI,MAAM,IAAI,CAACQ,MAAM,CAACC,OAAO,CAACC,mBAAmB,CAACL,YAAY;IAChF,CAAC;IACD,MAAMH,oBAAoBA,CAAA,EAAE;MACxB,IAAI;QACA,IAAIS,MAAK,GAAI;UACTC,OAAO,EAAE;YACLC,aAAa,EAAE,SAAQ,GAAI,IAAI,CAACL,MAAM,CAACC,OAAO,CAACK;UACnD;QACJ;QACA,IAAIC,GAAE,GAAInB,SAAS,CAACoB,QAAO,GAAI,kCAAkC;QACjE,IAAIC,GAAE,GAAI,CAAC,MAAMpB,KAAK,CAACqB,GAAG,CAACH,GAAG,EAAEJ,MAAM,CAAC,EAAEZ,IAAI;QAC7C,IAAI,CAACC,UAAS,GAAIiB,GAAG;MACzB,EACA,OAAOE,CAAC,EAAE;QACNb,OAAO,CAACC,GAAG,CAACY,CAAC,CAACC,OAAO;MACzB;IACJ,CAAC;IACDC,cAAcA,CAACC,OAAO,EAAC;MACnB,IAAIC,CAAA,GAAI,IAAI,CAACf,MAAM,CAACC,OAAO,CAACY,cAAc,CAACC,OAAO,CAAC;MACnD,IAAI,CAACC,CAAC,EACN,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEH,OAAO,CAAC;IAChD;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}